{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Modelo/Persona.ts","webpack:///src/app/Personsa/add/add.component.ts","webpack:///src/app/Personsa/add/add.component.html","webpack:///src/app/Personsa/edit/edit.component.ts","webpack:///src/app/Personsa/edit/edit.component.html","webpack:///src/app/Personsa/listar/listar.component.ts","webpack:///src/app/Personsa/listar/listar.component.html","webpack:///src/app/Service/service.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Persona","AddComponent","service","router","persona","createPersona","subscribe","dato","alert","navigate","Guardar","selector","templateUrl","styleUrls","EditComponent","Editar","localStorage","getItem","getPersonaId","modificaPersona","Actualizar","ListarComponent","getPersonas","datos","personas","setItem","toString","borrarPersona","filter","p","ServiceService","http","Url","get","post","put","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","Listar","Nuevo","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Persona{\r\n    id:Number\r\n    nombre:String\r\n    apellidos:String\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ServiceService } from 'src/app/Service/service.service';\nimport { Router } from '@angular/router';\nimport { Persona } from 'src/app/Modelo/Persona';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  persona:Persona=new Persona()\n  constructor(private service:ServiceService, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  Guardar(persona:Persona){\n    this.service.createPersona(persona).subscribe(dato => {\n      alert(\"Se agregó con éxito !!!\")\n      this.router.navigate([\"listar\"])\n    })\n  }\n\n}\n","<div class=\"container col-md-6\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h3>Agregar Persona</h3>\n        </div>\n        <div class=\"card-body\">\n            <form action=\"\">\n                <div class=\"form-group\">\n                    <label for=\"\">Nombre: </label>\n                    <input [(ngModel)]=\"persona.nombre\" name=\"nombre\" type=\"text\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"\">Apellidos: </label>\n                    <input [(ngModel)]=\"persona.apellidos\" name=\"apellidos\" type=\"text\" class=\"form-control\">\n                </div>\n                <button (click)=\"Guardar(persona)\" class=\"btn btn-danger\">Guardar</button>\n            </form>\n        </div>\n      </div>    \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Persona } from 'src/app/Modelo/Persona';\nimport { ServiceService } from 'src/app/Service/service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  persona:Persona=new Persona()\n  constructor(private service:ServiceService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.Editar()\n  }\n\n  Editar(){\n    let id=localStorage.getItem(\"id\")\n    this.service.getPersonaId(+id).subscribe(dato => {\n      this.persona=dato\n    })\n  }\n\n  Actualizar(persona:Persona){\n    this.service.modificaPersona(persona).subscribe(dato =>{\n      alert(\"Modificación exitosa !!!\")\n      this.router.navigate([\"listar\"])\n    })\n  }\n\n}\n","<div class=\"container col-md-6\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h3>Actualizar Persona</h3>\n        </div>\n        <div class=\"card-body\">\n            <form action=\"\">\n                <div class=\"form-group\">\n                    <label for=\"\">Nombre: </label>\n                    <input [(ngModel)]=\"persona.nombre\" name=\"nombre\" type=\"text\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"\">Apellidos: </label>\n                    <input [(ngModel)]=\"persona.apellidos\" name=\"apellidos\" type=\"text\" class=\"form-control\">\n                </div>\n                <button (click)=\"Actualizar(persona)\" class=\"btn btn-danger\">Modificar</button>\n            </form>\n        </div>\n      </div>    \n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ServiceService} from '../../Service/service.service'\nimport { Router } from '@angular/router';\nimport { Persona } from 'src/app/Modelo/Persona';\n\n@Component({\n  selector: 'app-listar',\n  templateUrl: './listar.component.html',\n  styleUrls: ['./listar.component.css']\n})\nexport class ListarComponent implements OnInit {\n  personas:Persona[]\n  constructor(private service:ServiceService, private router:Router) { }\n\n  ngOnInit(): void {\n  \n    this.service.getPersonas()\n    .subscribe(datos => {\n      this.personas=datos;\n    })\n  }\n\n  Editar(persona:Persona){\n    localStorage.setItem(\"id\", persona.id.toString())\n    this.router.navigate([\"edit\"])\n  }\n\n  Borrar(persona:Persona){\n    this.service.borrarPersona(persona).subscribe(dato => {\n      this.personas=this.personas.filter(p => p!==persona)\n      alert(\"Eliminación exitosa !!!\")\n      this.router.navigate([\"listar\"])\n    })\n  }\n}\n","<div class=\"container\">\n    <div class=\"card\">\n        <div class=\"card-header\">\n            <h1>Personas</h1>\n        </div>\n        <div class=\"card-body\">\n            <table class=\"table table-striped\">\n                <thead>\n                  <tr class=\"table table-hover\">\n                    <th>ID</th>\n                    <th>NOMBRE</th>\n                    <th>APELLIDOS</th>\n                    <th>ACCIONES</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let persona of personas\" class=\"text-center\">\n                    <td>{{persona.id}}</td>\n                    <td>{{persona.nombre}}</td>\n                    <td>{{persona.apellidos}}</td>\n                    <td>\n                        <button (click)=\"Editar(persona)\" class=\"btn btn-warning\">Editar</button>\n                        <button (click)=\"Borrar(persona)\" class=\"btn btn-danger\" style=\"margin-left: 10px;\">Eliminar</button>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Persona } from '../Modelo/Persona'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  constructor(private http:HttpClient){\n  }\n\n  Url = 'http://localhost:8095/personas'\n  getPersonas(){\n    return this.http.get<Persona[]>(this.Url)\n  }\n\n  createPersona(persona:Persona){\n    return this.http.post<Persona>(this.Url, persona)\n  }\n\n  getPersonaId(id:Number){\n    return this.http.get<Persona>(this.Url+\"/\"+id)\n  }\n\n  modificaPersona(persona:Persona){\n    return this.http.put<Persona>(this.Url+\"/\"+persona.id, persona)\n  }\n\n  borrarPersona(persona:Persona){\n    return this.http.delete<Persona>(this.Url+\"/\"+persona.id)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ListarComponent} from './Personsa/listar/listar.component'\nimport { AddComponent } from \"./Personsa/add/add.component\";\nimport { EditComponent } from \"./Personsa/edit/edit.component\";\n\n\nconst routes: Routes = [\n  {path:'listar', component:ListarComponent},\n  {path:'add', component:AddComponent},\n  {path:'edit', component:EditComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'crudpersona';\n\n  constructor(private router:Router){\n\n  }\n  Listar(){\n    this.router.navigate([\"listar\"])\n  }\n\n  Nuevo(){\n    this.router.navigate(['add'])\n  }\n}","<div class=\"container\">\n  <button (click)=\"Listar()\" class=\"btn btn-info\">Lista</button>\n  <button (click)=\"Nuevo()\" class=\"btn btn-info\" style=\"margin-left: 10px;\">Nuevo</button>\n</div>\n<hr />\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ListarComponent } from './Personsa/listar/listar.component';\nimport { AddComponent } from './Personsa/add/add.component';\nimport { EditComponent } from './Personsa/edit/edit.component';\n\nimport { FormsModule } from '@angular/forms'\nimport { ServiceService } from '../app/Service/service.service'\nimport { HttpClientModule} from '@angular/common/http'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListarComponent,\n    AddComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [ServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}